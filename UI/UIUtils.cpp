// UIUtils.cpp: implementation of the CUIUtils class.
//
//////////////////////////////////////////////////////////////////////

#include "UIUtils.h"

//////////////////////////////////////////////////////////////////////
// Construction/Destruction
//////////////////////////////////////////////////////////////////////

CUIUtils::CUIUtils()
{

}

//-----------------------------------------------------------------------------------

CUIUtils::~CUIUtils()
{

}

//-----------------------------------------------------------------------------------

void CUIUtils::PubDispString(void *pszStr, ushort nPosition)
{
	uchar mode, x, y, ucLen, buffer[60];
	uchar ucReverFlag;
	
	if (pszStr == NULL) {
		return;
	}
	
	mode  = nPosition & 0x00f0;
	y     = nPosition & 0x000f;

	ucLen = strlen((const char*)pszStr);
	if (ucLen > NUM_MAXZHCHARS) {
		ucLen = NUM_MAXZHCHARS;
	}
	
	switch(mode) {
		case DISP_LINE_CENTER:
			ScrClrLine(y, (uchar) (y + 1));
			x = (64 - ucLen * 4);
		break;
		case DISP_LINE_RIGHT:
			x = (128 - ucLen * 8);
		break;
		case DISP_LINE_LEFT:
		default:
			x = 0;
		break;
	}

	if (nPosition&DISP_SCR_CENTER) {
		ScrCls();
		x = (64 - ucLen * 4);
		y = 3;
	}
	ucReverFlag = 0;
	if (nPosition&DISP_LINE_REVER || nPosition&DISP_PART_REVER) {
		ucReverFlag = REVER;
	}

	memset(buffer, 0, sizeof(buffer));
	memcpy(buffer, pszStr, ucLen);
	ScrClrLine(y, (uchar)(y+1));
	if (nPosition&DISP_LINE_REVER)
		ScrPrint(0, y, CFONT|REVER, "%*s", NUM_MAXZHCHARS, "");
	ScrPrint(x, y, (uchar)(CFONT|ucReverFlag), "%s", (char *)buffer);
}

//-----------------------------------------------------------------------------------
bool CUIUtils::IsChar(uchar ch)
{
	if ((ch >= '0' && ch <= '9') || (ch >= 'A' && ch <= 'Z') || (ch >= 'a' && ch <= 'z')) {
		return true;
	}
	return false;
}

//-----------------------------------------------------------------------------------

int CUIUtils::str2amt(const char *pAmt, char* pDest, int len)
{
	int count = strlen(pAmt);
	int zero = 0;
	for (int k = 0; k < count; ++k) {
		if (pAmt[k] == '0' || pAmt[k] == ' ') {
			++zero;
		}
		else {
			break;
		}
	}
	count -= zero;
	if (count == 0) {
		pDest[0] = '0';
		pDest[1] = '.';
		pDest[2] = '0';
		pDest[3] = '0';
		pDest[4] = 0x00;
		return 4;
	}
	pAmt += zero;
	char *pTmp = new char[ 4 + count * 2];
	memset(pTmp, 0x00,  4 + count * 2);
	int j = 0;
	pTmp[0] = '0';
	pTmp[1] = '0';
	pTmp[2] = '.';
	pTmp[3] = '0';
	pTmp[4] = 0x00;
	
	for (int i = 0; i < count; ++i, ++j) {
		if (i == 2) {
			pTmp[j] = '.';
			++j;
		}
		else if ((i - 2) % 3 == 0) {
			pTmp[j] = ',';
			++j;
		}
		pTmp[j] = pAmt[count - i - 1];
	}
	CUIUtils::strrev(pTmp);
	int ret = strlen(pTmp);
	memcpy(pDest, pTmp, ret);
	pDest[ret] = 0x00;
	delete[] pTmp;
	return ret;
	//memcpy(pDest + len - strlen(pAmt), pAmt, strlen(pAmt));
}

//-----------------------------------------------------------------------------------
char* CUIUtils::strrev(char* pSrc)
{
	ASSERT(pSrc != NULL);

	int len = strlen(pSrc);
	char tmp;
	for (int i = 0; i < len / 2; ++i) {
		tmp = pSrc[i];
		pSrc[i] = pSrc[len - i - 1];
		pSrc[len - i - 1] = tmp;
	}
	return pSrc;
}
//-----------------------------------------------------------------------------------

void CUIUtils::AnimOK(char *pszMsg)
{
	uchar	ucLogoNo;
	
	ScrCls();

	PubDispString(pszMsg, 2|DISP_LINE_LEFT);

	TimerSet(TIMER_TEMPORARY, 1);
	for(ucLogoNo = 0; ucLogoNo < 3; ) {
		if (TimerCheck(TIMER_TEMPORARY) == 0) {
			DispOkSub(ucLogoNo);
			ucLogoNo++;
			TimerSet(TIMER_TEMPORARY, 1);
		}
	}
	DelayMs(1500);
}

void CUIUtils::AnimError(char *pszMsg)
{
	uchar	ucLogoNo;
	
	ScrCls();

	PubDispString(pszMsg, 2|DISP_LINE_LEFT);
		
	ScrFontSet(1);
	TimerSet(TIMER_TEMPORARY, 1);
	for(ucLogoNo = 0; ucLogoNo < 5; ) {
		if (TimerCheck(TIMER_TEMPORARY) == 0) {
			ScrGotoxy(5,20);
			if ((ucLogoNo % 2) != 0) {
				Lcdprintf("!");
			}
			else {
				Lcdprintf(" ");
			}
			ucLogoNo++;
			TimerSet(TIMER_TEMPORARY, 1);
		}
	}
	ScrFontSet(0);
	DelayMs(1500);
}

//-----------------------------------------------------------------------------------

void CUIUtils::DispOkSub(uchar ucLogoNo)
{
	static uchar sLogoOkThree[117] =
	{
		0x03,
		0x00,0x24,
		0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xc0,0x40,0x0,0x40,0x0,0x40,0x0,0x40,0x0,
		0x40,0x0,0x40,0x0,0x40,0x0,0x80,0xc0,0xc0,0xc0,0xe0,0x60,0x60,0x30,0x30,0x30,
		0x10,0x10,0x10,0x0,

		0x00,0x24,
		0x0,0x4,0x4,0x4,0xc,0x18,0x18,0xba,0x70,0xe0,0xe0,0xc0,0xc0,0x80,0xc0,0xe0,
		0xf0,0xf8,0x7c,0x3e,0x1f,0xf,0x7,0xab,0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
		0x0,0x0,0x0,0x0,

		0x00,0x24,
		0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x6,0x4,0x0,0x5,0x3,0x7,0x3,0x7,0x3,
		0x5,0x0,0x4,0x0,0x4,0x0,0x4,0x6,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
		0x0,0x0,0x0,0x0
	};
	static uchar sLogoOkTwo[117] =
	{
		0x03,
		0x00,0x24,
		0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xc0,0x40,0x0,0x40,0x0,0x40,0x0,0x40,0x0,
		0x40,0x0,0x40,0x0,0x40,0x0,0x40,0xc0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
		0x0,0x0,0x0,0x0,

		0x00,0x24,
		0x0,0x4,0x4,0x4,0xc,0x18,0x18,0xba,0x70,0xe0,0xe0,0xc0,0xc0,0x80,0xc0,0xe0,
		0xf0,0xf8,0x7c,0x38,0x10,0x0,0x0,0xaa,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
		0x0,0x0,0x0,0x0,

		0x00,0x24,
		0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x6,0x4,0x0,0x5,0x3,0x7,0x3,0x7,0x3,
		0x5,0x0,0x4,0x0,0x4,0x0,0x4,0x6,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
		0x0,0x0,0x0,0x0
	};
	static uchar sLogoOkOne[117] =
	{
		0x03,
		0x00,0x24,
		0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xc0,0x40,0x0,0x40,0x0,0x40,0x0,0x40,0x0,
		0x40,0x0,0x40,0x0,0x40,0x0,0x40,0xc0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
		0x0,0x0,0x0,0x0,

		0x00,0x24,
		0x0,0x4,0x4,0x4,0xc,0x18,0x18,0xba,0x70,0xe0,0xe0,0xc0,0xc0,0x80,0x0,0x0,
		0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xaa,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
		0x0,0x0,0x0,0x0,

		0x00,0x24,
		0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x6,0x4,0x0,0x5,0x3,0x7,0x3,0x6,0x0,
		0x4,0x0,0x4,0x0,0x4,0x0,0x4,0x6,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
		0x0,0x0,0x0,0x0
	};

	//ScrGotoxy(76, 3);
	ScrGotoxy(76, 4);
	if( ucLogoNo==0 ) {
		ScrDrLogo(sLogoOkOne);
	}
	else if( ucLogoNo==1 ) {
		ScrDrLogo(sLogoOkTwo);
	}
	else {
		ScrDrLogo(sLogoOkThree);
	}
}
//-----------------------------------------------------------------------------------
